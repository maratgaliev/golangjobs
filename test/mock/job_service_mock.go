// Code generated by MockGen. DO NOT EDIT.
// Source: service/job_service.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	model "github.com/maratgaliev/golangjobs/model"
)

// MockJobService is a mock of JobService interface
type MockJobService struct {
	ctrl     *gomock.Controller
	recorder *MockJobServiceMockRecorder
}

// MockJobServiceMockRecorder is the mock recorder for MockJobService
type MockJobServiceMockRecorder struct {
	mock *MockJobService
}

// NewMockJobService creates a new mock instance
func NewMockJobService(ctrl *gomock.Controller) *MockJobService {
	mock := &MockJobService{ctrl: ctrl}
	mock.recorder = &MockJobServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockJobService) EXPECT() *MockJobServiceMockRecorder {
	return m.recorder
}

// GetJob mocks base method
func (m *MockJobService) GetJob(id int) (*model.Job, error) {
	ret := m.ctrl.Call(m, "GetJob", id)
	ret0, _ := ret[0].(*model.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJob indicates an expected call of GetJob
func (mr *MockJobServiceMockRecorder) GetJob(id interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJob", reflect.TypeOf((*MockJobService)(nil).GetJob), id)
}

// GetJobs mocks base method
func (m *MockJobService) GetJobs() ([]*model.Job, error) {
	ret := m.ctrl.Call(m, "GetJobs")
	ret0, _ := ret[0].([]*model.Job)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetJobs indicates an expected call of GetJobs
func (mr *MockJobServiceMockRecorder) GetJobs() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetJobs", reflect.TypeOf((*MockJobService)(nil).GetJobs))
}

// CreateJob mocks base method
func (m *MockJobService) CreateJob(job *model.Job) (*int, error) {
	ret := m.ctrl.Call(m, "CreateJob", job)
	ret0, _ := ret[0].(*int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateJob indicates an expected call of CreateJob
func (mr *MockJobServiceMockRecorder) CreateJob(job interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateJob", reflect.TypeOf((*MockJobService)(nil).CreateJob), job)
}

// UpdateJob mocks base method
func (m *MockJobService) UpdateJob(job *model.Job) error {
	ret := m.ctrl.Call(m, "UpdateJob", job)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateJob indicates an expected call of UpdateJob
func (mr *MockJobServiceMockRecorder) UpdateJob(job interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateJob", reflect.TypeOf((*MockJobService)(nil).UpdateJob), job)
}

// DeleteJob mocks base method
func (m *MockJobService) DeleteJob(id int) error {
	ret := m.ctrl.Call(m, "DeleteJob", id)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteJob indicates an expected call of DeleteJob
func (mr *MockJobServiceMockRecorder) DeleteJob(id interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteJob", reflect.TypeOf((*MockJobService)(nil).DeleteJob), id)
}
